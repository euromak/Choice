// Generated by CoffeeScript 1.12.7
var buylotfinish, check_user, del_step, like, load_ref_money, loadurl, process_response, save_autoinvest, save_spam, submitform, tok_story;

process_response = function(data, replacement) {
  if (data.hasOwnProperty("replace")) {
    $(data['replace']).replaceWith(data["text"]);
  }
  if (data.hasOwnProperty("text")) {
    $(replacement).replaceWith("<div>" + data["text"] + "</div>");
  }
  if (data.hasOwnProperty("eval")) {
    eval(data["eval"]);
  }
  if (data.hasOwnProperty("append")) {
    $(replacement).append("<div class=\"success\">" + data["append"] + "</div>");
  }
  if (data.hasOwnProperty("redirect")) {
    loadurl(data["redirect"]);
  }
  if (data.hasOwnProperty("full_redirect")) {
    return document.location.href = data["full_redirect"];
  }
};

loadurl = function(url) {
  return document.location.href = url;
};

buylotfinish = function(wallet, qr, usdt, btc) {
  $('.tokenex_nav_item_active').removeClass('tokenex_nav_item_active');
  $('.tokenex_tabcont_active').removeClass('tokenex_tabcont_active');
  $('.tokenex_tabcont[data-tokenexcont="3"]').addClass('tokenex_tabcont_active');
  $('#qrbuy').attr('src', qr);
  $('#btc-wallet-num').val(wallet);
  $('#tobuyusdt').html(usdt);
  return $('#tobuybtc').html(btc);
};

tok_story = function(url) {
  return $.getJSON(url, function(data) {
    $('.js-modal-tokstory .pop_title').text(data.title);
    return $('.js-modal-tokstory .my-lot_story_cont').html(data.html);
  });
};

like = function(url, id) {
  return $.ajax({
    type: "GET",
    url: url,
    success: function(data) {
      return $('#' + id).replaceWith(data);
    }
  });
};

load_ref_money = function(url) {
  $('#ref_money').html('<div style="text-align: center; padding: 30px"><img src="/static/img/ref_preload.gif"></div>');
  return $.ajax({
    type: "GET",
    url: url,
    success: function(data) {
      $('#ref_money').html(data);
      return priceFormatter();
    }
  });
};

submitform = function(e) {
  $(e).find('button[type="submit"]').prop("disabled", "disabled");
  return $.ajax({
    type: "POST",
    url: $(e).attr("action"),
    data: new FormData($(e)[0]),
    processData: false,
    contentType: false,
    cache: false,
    success: function(data) {
      console.log(data);
      process_response(data, e);
      $(e).find("label.error").remove();
      $(e).find(".form-control").removeClass('error');
      return $(e).find('button[type="submit"]').prop("disabled", "");
    },
    error: function(resp) {
      var error, errors, results;
      $(e).find('button[type="submit"]').prop("disabled", "");
      errors = JSON.parse(resp.responseText);
      $(e).find("label.error").remove();
      $(e).find(".form-control").removeClass('error');
      results = [];
      for (error in errors) {
        if (error === "__all__") {
          results.push($(e).find(e).before("<span class=\"has-error\">" + errors["errors"][error] + "</span>"));
        } else {
          $(e).find("#id_" + error).addClass('error');
          results.push($(e).find("#id_" + error).after("<label for=\"id_\"" + error + " class=\"error\">" + errors[error] + "</label>"));
        }
      }
      return results;
    }
  });
};

check_user = function() {
  return $.getJSON($('#id_ref').attr('check_url'), {
    'ref': $('#id_ref').val()
  }, function(data) {
    $('#agent span').text(data.ref);
    return $('.login_agent').show();
  });
};

save_autoinvest = function(param, url) {
  return $.ajax({
    type: "POST",
    url: url + '?action=autoinvest',
    data: {
      'param': param
    }
  });
};

save_spam = function(param, url) {
  return $.ajax({
    type: "POST",
    url: url,
    data: {
      'param': param
    }
  });
};

del_step = function(id, url) {
  return $.ajax({
    type: "GET",
    url: url,
    success: function(data) {
      return $('#' + id).replaceWith(data);
    }
  });
};

//# sourceMappingURL=sergei.js.map